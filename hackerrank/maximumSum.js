function maximumSum(a, m) {
  let prefix_sum = [];
  let count = 0;
  a.forEach((item, index) => {
    count = (item % m + count) % m;
    prefix_sum[index] = count;
  });
let maxVal = 0; 
let sortArr = []
let countl = 0
for(let i = 0; i < a.length; i++) {
  sortArr = SortPrefix(sortArr, prefix_sum[i])
  let currSortedIndex = sortArr.indexOf(prefix_sum[i])
  if(sortArr[currSortedIndex+1] && sortArr[currSortedIndex+1] > sortArr[currSortedIndex]){
    // countl++
    console.log(sortArr[currSortedIndex]=== prefix_sum[i])
    let arr = [maxVal,(sortArr[currSortedIndex] - sortArr[currSortedIndex+1] + m) % m]
    maxVal = Math.max(...arr)
  }else{
    let arr = [maxVal,prefix_sum[i]]
    maxVal = Math.max(...arr)
  }
}
console.log(countl)
console.log(maxVal)
return maxVal
}
let arr = [
    // 3,3,9,9,5
  // 846930887, 1681692778, 1714636916, 1957747794, 424238336, 719885387,
  // 1649760493, 596516650, 1189641422, 1025202363, 1350490028, 783368691,
  // 1102520060, 2044897764, 1967513927, 1365180541, 1540383427, 304089173,
  // 1303455737, 35005212, 521595369, 294702568, 1726956430, 336465783, 861021531,
  // 278722863, 233665124, 2145174068, 468703136, 1101513930, 1801979803,
  // 1315634023, 635723059, 1369133070, 1125898168, 1059961394, 2089018457,
  // 628175012, 1656478043, 1131176230, 1653377374, 859484422, 1914544920,
  // 608413785, 756898538, 1734575199, 1973594325, 149798316, 2038664371,
  // 1129566414,
    412776092, 1424268981, 1911759957, 749241874, 137806863, 42999171, 982906997,
    135497282, 511702306, 2084420926, 1937477085, 1827336328, 572660337,
    1159126506, 805750847, 1632621730, 1100661314, 1433925858, 1141616125,
    84353896, 939819583, 2001100546, 1998898815, 1548233368, 610515435,
    1585990365, 1374344044, 760313751, 1477171088, 356426809, 945117277,
    1889947179, 1780695789, 709393585, 491705404, 1918502652, 752392755,
    1474612400, 2053999933, 1264095061, 1411549677, 1843993369, 943947740,
    1984210013, 855636227, 1749698587, 1469348095, 1956297540, 1036140796,
    463480571,
  //   1975960379, 317097468, 1892066602, 1376710098, 927612903, 1330573318,
  //   603570493, 1687926653, 660260757, 959997302, 485560281, 402724287, 593209442,
  //   1194953866, 894429690, 364228445, 1947346620, 221558441, 270744730,
  //   1063958032, 1633108118, 2114738098, 2007905772, 1469834482, 822890676,
  //   1610120710, 791698928, 631704568, 498777857, 1255179498, 524872354, 327254587,
  //   1572276966, 269455307, 1703964684, 352406220, 1600028625, 160051529,
  //   2040332872, 112805733, 1120048830, 378409504, 515530020, 1713258271,
  //   1573363369, 1409959709, 2077486716, 1373226341, 1631518150, 200747797,
//   1117142619, 168002246, 150122847, 439493452, 990892922, 1760243556,
//   1231192380, 1622597489, 111537765, 338888229, 2147469842, 438792351,
//   1911165194, 269441501, 2142757035, 116087765, 1869470125, 155324915, 8936988,
//   1982275857, 1275373744, 387346492, 350322228, 841148366, 1960709860,
//   1760281937, 771151433, 1186452552, 1244316438, 971899229, 1476153276,
//   213975408, 1139901475, 1626276122, 653468859, 2130794396, 1239036030,
//   1884661238, 1605908236, 1350573794, 76065819, 1605894429, 1789366144,
//   1987231012, 1875335929, 1784639530, 2103318777, 1597322405, 1939964444,
//   2112255764,
];

const SortPrefix = (arr, value) => {
  arr.push(value)
  return arr.sort((a,b)=>a-b)
}

//1802192837
//1804289384
// maximumSum(arr, 184803527);


// function maximumSum(a, m) {
//   let prefix_sum = [];
//   let count = 0;
//   a.forEach((item, index) => {
//     count = (item % m + count) % m;
//     prefix_sum[index] = count;
//   });
// let maxVal = 0; 
// for(let i = 0; i < a.length; i++) { 
//   for(let j = i-1; j >= 0; j--) { 
//       if(prefix_sum[j] > prefix_sum[i]){
//         let arr = [maxVal, (prefix_sum[i] - prefix_sum[j] + m) % m]
//         maxVal = Math.max(...arr)
//       }
//   } 
//   let arr = [maxVal, prefix_sum[i]]
//   maxVal = Math.max(...arr)
// } 
// console.log(maxVal)
// return maxVal
// }


var maxSubArray = function(nums) {
  if(nums.length < 2) return nums[0]
  let max = nums[0], ending = 0
  for(let i = 0; i < nums.length; i++){
      ending+=nums[i]
      if(max < ending) max = ending
      if(ending < 0) ending = 0
  }
  return max
};